{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flavi\\\\WindSurf Projects\\\\karaoke-app\\\\frontend\\\\src\\\\pages\\\\Session.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Box, Typography, Paper, Avatar, List, ListItem, ListItemAvatar, ListItemText, Grid, IconButton } from '@mui/material';\nimport { PlayArrow, Pause } from '@mui/icons-material';\nimport { io } from 'socket.io-client';\nimport SongList from '../components/SongList';\nimport SongQueue from '../components/SongQueue';\nimport { config } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Session() {\n  _s();\n  const {\n    sessionId\n  } = useParams();\n  const [session, setSession] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState('');\n  const [socket, setSocket] = useState(null);\n  const [queue, setQueue] = useState([]);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem('userData'));\n    if (!userData) {\n      setError('User data not found');\n      return;\n    }\n\n    // Connect to Socket.IO\n    const newSocket = io(config.backendUrl);\n    setSocket(newSocket);\n    newSocket.emit('joinSession', {\n      sessionId,\n      user: userData\n    });\n    newSocket.on('userJoined', ({\n      users\n    }) => {\n      setUsers(users);\n    });\n    newSocket.on('syncSession', ({\n      currentSong,\n      songQueue\n    }) => {\n      setCurrentSong(currentSong);\n      setQueue(songQueue);\n    });\n    newSocket.on('queueUpdated', ({\n      queue\n    }) => {\n      setQueue(queue);\n    });\n    newSocket.on('songStarted', ({\n      song,\n      startTime\n    }) => {\n      setCurrentSong({\n        ...song,\n        startTime\n      });\n      setIsPlaying(true);\n    });\n    newSocket.on('songPaused', ({\n      currentTime\n    }) => {\n      setIsPlaying(false);\n      if (currentSong) {\n        setCurrentSong({\n          ...currentSong,\n          pausedAt: currentTime\n        });\n      }\n    });\n    newSocket.on('songResumed', ({\n      startTime\n    }) => {\n      setIsPlaying(true);\n      if (currentSong) {\n        setCurrentSong({\n          ...currentSong,\n          startTime\n        });\n      }\n    });\n\n    // Fetch session data\n    fetch(`${config.backendUrl}/api/sessions/${sessionId}`).then(res => res.json()).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setSession(data);\n      }\n    }).catch(err => {\n      setError('Failed to fetch session data');\n    });\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [sessionId]);\n  const handleAddToQueue = song => {\n    if (socket) {\n      socket.emit('addToQueue', {\n        sessionId,\n        song\n      });\n    }\n  };\n  const handlePlay = (song, index) => {\n    if (socket) {\n      const startTime = Date.now();\n      socket.emit('playSong', {\n        sessionId,\n        song,\n        startTime\n      });\n\n      // Remove the song from queue if it was played from queue\n      if (typeof index === 'number') {\n        const newQueue = [...queue];\n        newQueue.splice(index, 1);\n        socket.emit('updateQueue', {\n          sessionId,\n          queue: newQueue\n        });\n      }\n    }\n  };\n  const handlePause = () => {\n    if (socket && currentSong) {\n      const currentTime = Date.now() - currentSong.startTime;\n      socket.emit('pauseSong', {\n        sessionId,\n        currentTime\n      });\n    }\n  };\n  const handleResume = () => {\n    if (socket && currentSong) {\n      const currentTime = currentSong.pausedAt || 0;\n      socket.emit('resumeSong', {\n        sessionId,\n        currentTime\n      });\n    }\n  };\n  const handleRemoveFromQueue = index => {\n    if (socket) {\n      const newQueue = [...queue];\n      newQueue.splice(index, 1);\n      socket.emit('updateQueue', {\n        sessionId,\n        queue: newQueue\n      });\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        variant: \"h6\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: [currentSong && /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              mb: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"large\",\n                onClick: isPlaying ? handlePause : handleResume,\n                children: isPlaying ? /*#__PURE__*/_jsxDEV(Pause, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 34\n                }, this) : /*#__PURE__*/_jsxDEV(PlayArrow, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 46\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: currentSong.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: currentSong.artist\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SongList, {\n            onAddToQueue: handleAddToQueue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 2,\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Connected Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              children: users.map((user, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    src: user.avatar\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: user.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SongQueue, {\n            queue: queue,\n            onPlay: handlePlay,\n            onRemove: handleRemoveFromQueue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        position: 'fixed',\n        bottom: 0,\n        left: '50%',\n        transform: 'translateX(-50%)',\n        p: 2,\n        display: 'flex',\n        alignItems: 'center',\n        gap: 2,\n        backgroundColor: 'background.paper',\n        boxShadow: 3,\n        borderTopLeftRadius: 16,\n        borderTopRightRadius: 16\n      },\n      children: [(session === null || session === void 0 ? void 0 : session.qrCode) && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: session.qrCode,\n        alt: \"Session QR Code\",\n        style: {\n          width: 60,\n          height: 60\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: [\"Session ID: \", sessionId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n_s(Session, \"yKa2RNQNSewDB7BZZQiC3b6vuHs=\", false, function () {\n  return [useParams];\n});\n_c = Session;\nexport default Session;\nvar _c;\n$RefreshReg$(_c, \"Session\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Container","Box","Typography","Paper","Avatar","List","ListItem","ListItemAvatar","ListItemText","Grid","IconButton","PlayArrow","Pause","io","SongList","SongQueue","config","jsxDEV","_jsxDEV","Session","_s","sessionId","session","setSession","users","setUsers","error","setError","socket","setSocket","queue","setQueue","currentSong","setCurrentSong","isPlaying","setIsPlaying","userData","JSON","parse","localStorage","getItem","newSocket","backendUrl","emit","user","on","songQueue","song","startTime","currentTime","pausedAt","fetch","then","res","json","data","catch","err","disconnect","handleAddToQueue","handlePlay","index","Date","now","newQueue","splice","handlePause","handleResume","handleRemoveFromQueue","children","color","variant","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","mt","container","spacing","item","xs","md","p","mb","display","alignItems","gap","size","onClick","title","artist","onAddToQueue","gutterBottom","map","src","avatar","primary","name","onPlay","onRemove","position","bottom","left","transform","backgroundColor","boxShadow","borderTopLeftRadius","borderTopRightRadius","qrCode","alt","style","width","height","_c","$RefreshReg$"],"sources":["C:/Users/flavi/WindSurf Projects/karaoke-app/frontend/src/pages/Session.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {\n  Container,\n  Box,\n  Typography,\n  Paper,\n  Avatar,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Grid,\n  IconButton,\n} from '@mui/material';\nimport { PlayArrow, Pause } from '@mui/icons-material';\nimport { io } from 'socket.io-client';\nimport SongList from '../components/SongList';\nimport SongQueue from '../components/SongQueue';\nimport { config } from '../config';\n\nfunction Session() {\n  const { sessionId } = useParams();\n  const [session, setSession] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState('');\n  const [socket, setSocket] = useState(null);\n  const [queue, setQueue] = useState([]);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  useEffect(() => {\n    const userData = JSON.parse(localStorage.getItem('userData'));\n    if (!userData) {\n      setError('User data not found');\n      return;\n    }\n\n    // Connect to Socket.IO\n    const newSocket = io(config.backendUrl);\n    setSocket(newSocket);\n    \n    newSocket.emit('joinSession', {\n      sessionId,\n      user: userData,\n    });\n\n    newSocket.on('userJoined', ({ users }) => {\n      setUsers(users);\n    });\n\n    newSocket.on('syncSession', ({ currentSong, songQueue }) => {\n      setCurrentSong(currentSong);\n      setQueue(songQueue);\n    });\n\n    newSocket.on('queueUpdated', ({ queue }) => {\n      setQueue(queue);\n    });\n\n    newSocket.on('songStarted', ({ song, startTime }) => {\n      setCurrentSong({ ...song, startTime });\n      setIsPlaying(true);\n    });\n\n    newSocket.on('songPaused', ({ currentTime }) => {\n      setIsPlaying(false);\n      if (currentSong) {\n        setCurrentSong({ ...currentSong, pausedAt: currentTime });\n      }\n    });\n\n    newSocket.on('songResumed', ({ startTime }) => {\n      setIsPlaying(true);\n      if (currentSong) {\n        setCurrentSong({ ...currentSong, startTime });\n      }\n    });\n\n    // Fetch session data\n    fetch(`${config.backendUrl}/api/sessions/${sessionId}`)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.error) {\n          setError(data.error);\n        } else {\n          setSession(data);\n        }\n      })\n      .catch((err) => {\n        setError('Failed to fetch session data');\n      });\n\n    return () => {\n      newSocket.disconnect();\n    };\n  }, [sessionId]);\n\n  const handleAddToQueue = (song) => {\n    if (socket) {\n      socket.emit('addToQueue', { sessionId, song });\n    }\n  };\n\n  const handlePlay = (song, index) => {\n    if (socket) {\n      const startTime = Date.now();\n      socket.emit('playSong', { sessionId, song, startTime });\n      \n      // Remove the song from queue if it was played from queue\n      if (typeof index === 'number') {\n        const newQueue = [...queue];\n        newQueue.splice(index, 1);\n        socket.emit('updateQueue', { sessionId, queue: newQueue });\n      }\n    }\n  };\n\n  const handlePause = () => {\n    if (socket && currentSong) {\n      const currentTime = Date.now() - currentSong.startTime;\n      socket.emit('pauseSong', { sessionId, currentTime });\n    }\n  };\n\n  const handleResume = () => {\n    if (socket && currentSong) {\n      const currentTime = currentSong.pausedAt || 0;\n      socket.emit('resumeSong', { sessionId, currentTime });\n    }\n  };\n\n  const handleRemoveFromQueue = (index) => {\n    if (socket) {\n      const newQueue = [...queue];\n      newQueue.splice(index, 1);\n      socket.emit('updateQueue', { sessionId, queue: newQueue });\n    }\n  };\n\n  if (error) {\n    return (\n      <Container>\n        <Typography color=\"error\" variant=\"h6\">\n          {error}\n        </Typography>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mt: 4 }}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={8}>\n            {/* Current Song */}\n            {currentSong && (\n              <Paper sx={{ p: 2, mb: 3 }}>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                  <IconButton\n                    size=\"large\"\n                    onClick={isPlaying ? handlePause : handleResume}\n                  >\n                    {isPlaying ? <Pause /> : <PlayArrow />}\n                  </IconButton>\n                  <Box>\n                    <Typography variant=\"h6\">{currentSong.title}</Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {currentSong.artist}\n                    </Typography>\n                  </Box>\n                </Box>\n              </Paper>\n            )}\n\n            {/* Song List */}\n            <SongList onAddToQueue={handleAddToQueue} />\n          </Grid>\n\n          <Grid item xs={12} md={4}>\n            {/* Connected Users */}\n            <Paper sx={{ p: 2, mb: 3 }}>\n              <Typography variant=\"h6\" gutterBottom>\n                Connected Users\n              </Typography>\n              <List>\n                {users.map((user, index) => (\n                  <ListItem key={index}>\n                    <ListItemAvatar>\n                      <Avatar src={user.avatar} />\n                    </ListItemAvatar>\n                    <ListItemText primary={user.name} />\n                  </ListItem>\n                ))}\n              </List>\n            </Paper>\n\n            {/* Song Queue */}\n            <SongQueue\n              queue={queue}\n              onPlay={handlePlay}\n              onRemove={handleRemoveFromQueue}\n            />\n          </Grid>\n        </Grid>\n      </Box>\n\n      {/* Fixed bottom container for QR code and session ID */}\n      <Paper\n        sx={{\n          position: 'fixed',\n          bottom: 0,\n          left: '50%',\n          transform: 'translateX(-50%)',\n          p: 2,\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2,\n          backgroundColor: 'background.paper',\n          boxShadow: 3,\n          borderTopLeftRadius: 16,\n          borderTopRightRadius: 16,\n        }}\n      >\n        {session?.qrCode && (\n          <img\n            src={session.qrCode}\n            alt=\"Session QR Code\"\n            style={{ width: 60, height: 60 }}\n          />\n        )}\n        <Typography variant=\"body1\">\n          Session ID: {sessionId}\n        </Typography>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default Session;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}