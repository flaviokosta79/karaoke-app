{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flavi\\\\WindSurf Projects\\\\karaoke-app\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Box, Button, Typography, TextField, Dialog, DialogTitle, DialogContent, DialogActions, CircularProgress, Snackbar, Alert } from '@mui/material';\nimport QrReader from 'react-qr-scanner';\nimport { config } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const navigate = useNavigate();\n  const [openQrScanner, setOpenQrScanner] = useState(false);\n  const [sessionId, setSessionId] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: '',\n    severity: 'info'\n  });\n\n  // Clear any existing user data when landing on home page\n  localStorage.removeItem('userData');\n  const showSnackbar = (message, severity = 'error') => {\n    setSnackbar({\n      open: true,\n      message,\n      severity\n    });\n  };\n  const handleCloseSnackbar = () => {\n    setSnackbar({\n      ...snackbar,\n      open: false\n    });\n  };\n  const createSession = async () => {\n    setIsLoading(true);\n    setError('');\n    try {\n      console.log('Creating session with backend URL:', config.backendUrl);\n      const response = await fetch(`${config.backendUrl}/api/sessions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to create session');\n      }\n      const data = await response.json();\n      if (!data.sessionId) {\n        throw new Error('Invalid response from server');\n      }\n\n      // Store session ID temporarily\n      localStorage.setItem('tempSessionId', data.sessionId);\n\n      // Navigate to user setup first\n      navigate('/setup');\n    } catch (error) {\n      console.error('Error creating session:', error);\n      const errorMessage = error.message || 'Failed to create session. Please try again.';\n      setError(errorMessage);\n      showSnackbar(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const joinSession = async () => {\n    if (!sessionId.trim()) {\n      const errorMessage = 'Please enter a session ID';\n      setError(errorMessage);\n      showSnackbar(errorMessage);\n      return;\n    }\n    setIsLoading(true);\n    setError('');\n    try {\n      // Verify session exists\n      const response = await fetch(`${config.backendUrl}/api/sessions/${sessionId}`);\n      if (!response.ok) {\n        throw new Error('Session not found');\n      }\n\n      // Navigate to user setup with session ID\n      navigate(`/setup/${sessionId}`);\n    } catch (error) {\n      console.error('Error joining session:', error);\n      const errorMessage = error.message || 'Failed to join session. Please try again.';\n      setError(errorMessage);\n      showSnackbar(errorMessage);\n      setIsLoading(false);\n    }\n  };\n  const handleQrScan = data => {\n    if (data) {\n      try {\n        // Extract session ID from QR code URL\n        const url = new URL(data.text);\n        const pathSegments = url.pathname.split('/');\n        const scannedSessionId = pathSegments[pathSegments.length - 1];\n        setOpenQrScanner(false);\n        navigate(`/setup/${scannedSessionId}`);\n      } catch (error) {\n        console.error('Error parsing QR code:', error);\n        const errorMessage = 'Invalid QR code';\n        setError(errorMessage);\n        showSnackbar(errorMessage);\n      }\n    }\n  };\n  const handleQrError = err => {\n    console.error('QR Scanner error:', err);\n    const errorMessage = 'Failed to scan QR code';\n    setError(errorMessage);\n    showSnackbar(errorMessage);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        component: \"h1\",\n        gutterBottom: true,\n        align: \"center\",\n        children: \"Karaoke Party \\uD83C\\uDFA4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"large\",\n          onClick: createSession,\n          disabled: isLoading,\n          sx: {\n            py: 2\n          },\n          children: isLoading ? /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20,\n              color: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Creating Session...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this) : 'Create New Session'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          align: \"center\",\n          sx: {\n            mt: 4,\n            mb: 2\n          },\n          children: \"or join existing session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Session ID\",\n          value: sessionId,\n          onChange: e => setSessionId(e.target.value),\n          error: !!error && !sessionId.trim(),\n          helperText: !sessionId.trim() && error,\n          disabled: isLoading,\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          size: \"large\",\n          onClick: joinSession,\n          disabled: isLoading,\n          sx: {\n            py: 2\n          },\n          children: isLoading ? /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20,\n              color: \"inherit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Joining Session...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this) : 'Join Session'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          onClick: () => setOpenQrScanner(true),\n          disabled: isLoading,\n          sx: {\n            mt: 2\n          },\n          children: \"Scan QR Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openQrScanner,\n        onClose: () => setOpenQrScanner(false),\n        fullWidth: true,\n        maxWidth: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Scan Session QR Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(QrReader, {\n            delay: 300,\n            onError: handleQrError,\n            onScan: handleQrScan,\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpenQrScanner(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: snackbar.open,\n        autoHideDuration: 6000,\n        onClose: handleCloseSnackbar,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseSnackbar,\n          severity: snackbar.severity,\n          variant: \"filled\",\n          sx: {\n            width: '100%'\n          },\n          children: snackbar.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"KZPDVeSuuFaBNvPRPn1iLJSdfRk=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useNavigate","Container","Box","Button","Typography","TextField","Dialog","DialogTitle","DialogContent","DialogActions","CircularProgress","Snackbar","Alert","QrReader","config","jsxDEV","_jsxDEV","Home","_s","navigate","openQrScanner","setOpenQrScanner","sessionId","setSessionId","error","setError","isLoading","setIsLoading","snackbar","setSnackbar","open","message","severity","localStorage","removeItem","showSnackbar","handleCloseSnackbar","createSession","console","log","backendUrl","response","fetch","method","headers","ok","Error","data","json","setItem","errorMessage","joinSession","trim","handleQrScan","url","URL","text","pathSegments","pathname","split","scannedSessionId","length","handleQrError","err","maxWidth","children","sx","mt","display","flexDirection","alignItems","gap","variant","component","gutterBottom","align","fileName","_jsxFileName","lineNumber","columnNumber","width","size","onClick","disabled","py","color","mb","fullWidth","label","value","onChange","e","target","helperText","onClose","delay","onError","onScan","style","autoHideDuration","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["C:/Users/flavi/WindSurf Projects/karaoke-app/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  Box,\n  Button,\n  Typography,\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  CircularProgress,\n  Snackbar,\n  Alert,\n} from '@mui/material';\nimport QrReader from 'react-qr-scanner';\nimport { config } from '../config';\n\nfunction Home() {\n  const navigate = useNavigate();\n  const [openQrScanner, setOpenQrScanner] = useState(false);\n  const [sessionId, setSessionId] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'info' });\n\n  // Clear any existing user data when landing on home page\n  localStorage.removeItem('userData');\n\n  const showSnackbar = (message, severity = 'error') => {\n    setSnackbar({ open: true, message, severity });\n  };\n\n  const handleCloseSnackbar = () => {\n    setSnackbar({ ...snackbar, open: false });\n  };\n\n  const createSession = async () => {\n    setIsLoading(true);\n    setError('');\n    \n    try {\n      console.log('Creating session with backend URL:', config.backendUrl);\n      const response = await fetch(`${config.backendUrl}/api/sessions`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to create session');\n      }\n\n      const data = await response.json();\n      \n      if (!data.sessionId) {\n        throw new Error('Invalid response from server');\n      }\n      \n      // Store session ID temporarily\n      localStorage.setItem('tempSessionId', data.sessionId);\n      \n      // Navigate to user setup first\n      navigate('/setup');\n    } catch (error) {\n      console.error('Error creating session:', error);\n      const errorMessage = error.message || 'Failed to create session. Please try again.';\n      setError(errorMessage);\n      showSnackbar(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const joinSession = async () => {\n    if (!sessionId.trim()) {\n      const errorMessage = 'Please enter a session ID';\n      setError(errorMessage);\n      showSnackbar(errorMessage);\n      return;\n    }\n\n    setIsLoading(true);\n    setError('');\n\n    try {\n      // Verify session exists\n      const response = await fetch(`${config.backendUrl}/api/sessions/${sessionId}`);\n      if (!response.ok) {\n        throw new Error('Session not found');\n      }\n\n      // Navigate to user setup with session ID\n      navigate(`/setup/${sessionId}`);\n    } catch (error) {\n      console.error('Error joining session:', error);\n      const errorMessage = error.message || 'Failed to join session. Please try again.';\n      setError(errorMessage);\n      showSnackbar(errorMessage);\n      setIsLoading(false);\n    }\n  };\n\n  const handleQrScan = (data) => {\n    if (data) {\n      try {\n        // Extract session ID from QR code URL\n        const url = new URL(data.text);\n        const pathSegments = url.pathname.split('/');\n        const scannedSessionId = pathSegments[pathSegments.length - 1];\n        \n        setOpenQrScanner(false);\n        navigate(`/setup/${scannedSessionId}`);\n      } catch (error) {\n        console.error('Error parsing QR code:', error);\n        const errorMessage = 'Invalid QR code';\n        setError(errorMessage);\n        showSnackbar(errorMessage);\n      }\n    }\n  };\n\n  const handleQrError = (err) => {\n    console.error('QR Scanner error:', err);\n    const errorMessage = 'Failed to scan QR code';\n    setError(errorMessage);\n    showSnackbar(errorMessage);\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box\n        sx={{\n          mt: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          gap: 4,\n        }}\n      >\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\">\n          Karaoke Party 🎤\n        </Typography>\n\n        <Box sx={{ width: '100%', display: 'flex', flexDirection: 'column', gap: 2 }}>\n          <Button\n            variant=\"contained\"\n            size=\"large\"\n            onClick={createSession}\n            disabled={isLoading}\n            sx={{ py: 2 }}\n          >\n            {isLoading ? (\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                <CircularProgress size={20} color=\"inherit\" />\n                <span>Creating Session...</span>\n              </Box>\n            ) : (\n              'Create New Session'\n            )}\n          </Button>\n\n          <Typography variant=\"h6\" align=\"center\" sx={{ mt: 4, mb: 2 }}>\n            or join existing session\n          </Typography>\n\n          <TextField\n            fullWidth\n            label=\"Session ID\"\n            value={sessionId}\n            onChange={(e) => setSessionId(e.target.value)}\n            error={!!error && !sessionId.trim()}\n            helperText={!sessionId.trim() && error}\n            disabled={isLoading}\n            sx={{ mb: 2 }}\n          />\n\n          <Button\n            variant=\"outlined\"\n            size=\"large\"\n            onClick={joinSession}\n            disabled={isLoading}\n            sx={{ py: 2 }}\n          >\n            {isLoading ? (\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                <CircularProgress size={20} color=\"inherit\" />\n                <span>Joining Session...</span>\n              </Box>\n            ) : (\n              'Join Session'\n            )}\n          </Button>\n\n          <Button\n            variant=\"text\"\n            onClick={() => setOpenQrScanner(true)}\n            disabled={isLoading}\n            sx={{ mt: 2 }}\n          >\n            Scan QR Code\n          </Button>\n        </Box>\n\n        <Dialog \n          open={openQrScanner} \n          onClose={() => setOpenQrScanner(false)}\n          fullWidth\n          maxWidth=\"sm\"\n        >\n          <DialogTitle>Scan Session QR Code</DialogTitle>\n          <DialogContent>\n            <QrReader\n              delay={300}\n              onError={handleQrError}\n              onScan={handleQrScan}\n              style={{ width: '100%' }}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setOpenQrScanner(false)}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n\n        <Snackbar\n          open={snackbar.open}\n          autoHideDuration={6000}\n          onClose={handleCloseSnackbar}\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        >\n          <Alert \n            onClose={handleCloseSnackbar} \n            severity={snackbar.severity}\n            variant=\"filled\"\n            sx={{ width: '100%' }}\n          >\n            {snackbar.message}\n          </Alert>\n        </Snackbar>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}