{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\flavi\\\\WindSurf Projects\\\\karaoke-app\\\\frontend\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Box, Button, Typography, TextField, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\nimport QrReader from 'react-qr-scanner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const navigate = useNavigate();\n  const [openQrScanner, setOpenQrScanner] = useState(false);\n  const [sessionId, setSessionId] = useState('');\n  const [error, setError] = useState('');\n  const createSession = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/sessions', {\n        method: 'POST'\n      });\n      const data = await response.json();\n      navigate(`/setup/${data.sessionId}`);\n    } catch (error) {\n      setError('Failed to create session');\n    }\n  };\n  const joinSession = () => {\n    if (sessionId.length === 4) {\n      navigate(`/setup/${sessionId}`);\n    } else {\n      setError('Please enter a valid 4-digit session ID');\n    }\n  };\n  const handleQrScan = data => {\n    if (data) {\n      const sessionId = data.text.split('/').pop();\n      setOpenQrScanner(false);\n      navigate(`/setup/${sessionId}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: \"Karaoke App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        fullWidth: true,\n        onClick: createSession,\n        children: \"Create New Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h2\",\n        children: \"- OR -\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Enter Session ID\",\n          value: sessionId,\n          onChange: e => setSessionId(e.target.value),\n          error: !!error,\n          helperText: error,\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          size: \"large\",\n          fullWidth: true,\n          onClick: joinSession,\n          children: \"Join Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        size: \"large\",\n        fullWidth: true,\n        onClick: () => setOpenQrScanner(true),\n        children: \"Scan QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: openQrScanner,\n        onClose: () => setOpenQrScanner(false),\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Scan Session QR Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(QrReader, {\n            delay: 300,\n            onError: err => console.error(err),\n            onScan: handleQrScan,\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpenQrScanner(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"vYB+3/aASoNOHCyWy/T7hM56AMk=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useNavigate","Container","Box","Button","Typography","TextField","Dialog","DialogTitle","DialogContent","DialogActions","QrReader","jsxDEV","_jsxDEV","Home","_s","navigate","openQrScanner","setOpenQrScanner","sessionId","setSessionId","error","setError","createSession","response","fetch","method","data","json","joinSession","length","handleQrScan","text","split","pop","maxWidth","children","sx","mt","display","flexDirection","alignItems","gap","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","size","fullWidth","onClick","width","label","value","onChange","e","target","helperText","mb","open","onClose","delay","onError","err","console","onScan","style","_c","$RefreshReg$"],"sources":["C:/Users/flavi/WindSurf Projects/karaoke-app/frontend/src/pages/Home.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  Box,\n  Button,\n  Typography,\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from '@mui/material';\nimport QrReader from 'react-qr-scanner';\n\nfunction Home() {\n  const navigate = useNavigate();\n  const [openQrScanner, setOpenQrScanner] = useState(false);\n  const [sessionId, setSessionId] = useState('');\n  const [error, setError] = useState('');\n\n  const createSession = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/sessions', {\n        method: 'POST',\n      });\n      const data = await response.json();\n      navigate(`/setup/${data.sessionId}`);\n    } catch (error) {\n      setError('Failed to create session');\n    }\n  };\n\n  const joinSession = () => {\n    if (sessionId.length === 4) {\n      navigate(`/setup/${sessionId}`);\n    } else {\n      setError('Please enter a valid 4-digit session ID');\n    }\n  };\n\n  const handleQrScan = (data) => {\n    if (data) {\n      const sessionId = data.text.split('/').pop();\n      setOpenQrScanner(false);\n      navigate(`/setup/${sessionId}`);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box\n        sx={{\n          mt: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          gap: 4,\n        }}\n      >\n        <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n          Karaoke App\n        </Typography>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"large\"\n          fullWidth\n          onClick={createSession}\n        >\n          Create New Session\n        </Button>\n\n        <Typography variant=\"h6\" component=\"h2\">\n          - OR -\n        </Typography>\n\n        <Box sx={{ width: '100%' }}>\n          <TextField\n            fullWidth\n            label=\"Enter Session ID\"\n            value={sessionId}\n            onChange={(e) => setSessionId(e.target.value)}\n            error={!!error}\n            helperText={error}\n            sx={{ mb: 2 }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            size=\"large\"\n            fullWidth\n            onClick={joinSession}\n          >\n            Join Session\n          </Button>\n        </Box>\n\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          size=\"large\"\n          fullWidth\n          onClick={() => setOpenQrScanner(true)}\n        >\n          Scan QR Code\n        </Button>\n\n        <Dialog open={openQrScanner} onClose={() => setOpenQrScanner(false)}>\n          <DialogTitle>Scan Session QR Code</DialogTitle>\n          <DialogContent>\n            <QrReader\n              delay={300}\n              onError={(err) => console.error(err)}\n              onScan={handleQrScan}\n              style={{ width: '100%' }}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setOpenQrScanner(false)}>Cancel</Button>\n          </DialogActions>\n        </Dialog>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Home;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}